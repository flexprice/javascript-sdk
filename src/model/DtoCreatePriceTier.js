/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoCreatePriceTier model module.
 * @module model/DtoCreatePriceTier
 * @version 1.0
 */
class DtoCreatePriceTier {
    /**
     * Constructs a new <code>DtoCreatePriceTier</code>.
     * @alias module:model/DtoCreatePriceTier
     * @param unitAmount {String} 
     */
    constructor(unitAmount) { 
        
        DtoCreatePriceTier.initialize(this, unitAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, unitAmount) { 
        obj['unit_amount'] = unitAmount;
    }

    /**
     * Constructs a <code>DtoCreatePriceTier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoCreatePriceTier} obj Optional instance to populate.
     * @return {module:model/DtoCreatePriceTier} The populated <code>DtoCreatePriceTier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoCreatePriceTier();

            if (data.hasOwnProperty('flat_amount')) {
                obj['flat_amount'] = ApiClient.convertToType(data['flat_amount'], 'String');
            }
            if (data.hasOwnProperty('unit_amount')) {
                obj['unit_amount'] = ApiClient.convertToType(data['unit_amount'], 'String');
            }
            if (data.hasOwnProperty('up_to')) {
                obj['up_to'] = ApiClient.convertToType(data['up_to'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoCreatePriceTier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoCreatePriceTier</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DtoCreatePriceTier.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['flat_amount'] && !(typeof data['flat_amount'] === 'string' || data['flat_amount'] instanceof String)) {
            throw new Error("Expected the field `flat_amount` to be a primitive type in the JSON string but got " + data['flat_amount']);
        }
        // ensure the json data is a string
        if (data['unit_amount'] && !(typeof data['unit_amount'] === 'string' || data['unit_amount'] instanceof String)) {
            throw new Error("Expected the field `unit_amount` to be a primitive type in the JSON string but got " + data['unit_amount']);
        }

        return true;
    }


}

DtoCreatePriceTier.RequiredProperties = ["unit_amount"];

/**
 * @member {String} flat_amount
 */
DtoCreatePriceTier.prototype['flat_amount'] = undefined;

/**
 * @member {String} unit_amount
 */
DtoCreatePriceTier.prototype['unit_amount'] = undefined;

/**
 * @member {Number} up_to
 */
DtoCreatePriceTier.prototype['up_to'] = undefined;






export default DtoCreatePriceTier;


/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DtoCustomerInvoiceSummary from './DtoCustomerInvoiceSummary';

/**
 * The DtoCustomerMultiCurrencyInvoiceSummary model module.
 * @module model/DtoCustomerMultiCurrencyInvoiceSummary
 * @version 1.0
 */
class DtoCustomerMultiCurrencyInvoiceSummary {
    /**
     * Constructs a new <code>DtoCustomerMultiCurrencyInvoiceSummary</code>.
     * @alias module:model/DtoCustomerMultiCurrencyInvoiceSummary
     */
    constructor() { 
        
        DtoCustomerMultiCurrencyInvoiceSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DtoCustomerMultiCurrencyInvoiceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoCustomerMultiCurrencyInvoiceSummary} obj Optional instance to populate.
     * @return {module:model/DtoCustomerMultiCurrencyInvoiceSummary} The populated <code>DtoCustomerMultiCurrencyInvoiceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoCustomerMultiCurrencyInvoiceSummary();

            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
            }
            if (data.hasOwnProperty('default_currency')) {
                obj['default_currency'] = ApiClient.convertToType(data['default_currency'], 'String');
            }
            if (data.hasOwnProperty('summaries')) {
                obj['summaries'] = ApiClient.convertToType(data['summaries'], [DtoCustomerInvoiceSummary]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoCustomerMultiCurrencyInvoiceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoCustomerMultiCurrencyInvoiceSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
            throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
        }
        // ensure the json data is a string
        if (data['default_currency'] && !(typeof data['default_currency'] === 'string' || data['default_currency'] instanceof String)) {
            throw new Error("Expected the field `default_currency` to be a primitive type in the JSON string but got " + data['default_currency']);
        }
        if (data['summaries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['summaries'])) {
                throw new Error("Expected the field `summaries` to be an array in the JSON data but got " + data['summaries']);
            }
            // validate the optional field `summaries` (array)
            for (const item of data['summaries']) {
                DtoCustomerInvoiceSummary.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} customer_id
 */
DtoCustomerMultiCurrencyInvoiceSummary.prototype['customer_id'] = undefined;

/**
 * @member {String} default_currency
 */
DtoCustomerMultiCurrencyInvoiceSummary.prototype['default_currency'] = undefined;

/**
 * @member {Array.<module:model/DtoCustomerInvoiceSummary>} summaries
 */
DtoCustomerMultiCurrencyInvoiceSummary.prototype['summaries'] = undefined;






export default DtoCustomerMultiCurrencyInvoiceSummary;


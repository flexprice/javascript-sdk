/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DtoCustomerResponse from './DtoCustomerResponse';
import DtoInvoiceLineItemResponse from './DtoInvoiceLineItemResponse';
import DtoSubscriptionResponse from './DtoSubscriptionResponse';
import TypesInvoiceStatus from './TypesInvoiceStatus';
import TypesInvoiceType from './TypesInvoiceType';
import TypesPaymentStatus from './TypesPaymentStatus';

/**
 * The DtoInvoiceResponse model module.
 * @module model/DtoInvoiceResponse
 * @version 1.0
 */
class DtoInvoiceResponse {
    /**
     * Constructs a new <code>DtoInvoiceResponse</code>.
     * @alias module:model/DtoInvoiceResponse
     */
    constructor() { 
        
        DtoInvoiceResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DtoInvoiceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoInvoiceResponse} obj Optional instance to populate.
     * @return {module:model/DtoInvoiceResponse} The populated <code>DtoInvoiceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoInvoiceResponse();

            if (data.hasOwnProperty('amount_due')) {
                obj['amount_due'] = ApiClient.convertToType(data['amount_due'], 'Number');
            }
            if (data.hasOwnProperty('amount_paid')) {
                obj['amount_paid'] = ApiClient.convertToType(data['amount_paid'], 'Number');
            }
            if (data.hasOwnProperty('amount_remaining')) {
                obj['amount_remaining'] = ApiClient.convertToType(data['amount_remaining'], 'Number');
            }
            if (data.hasOwnProperty('billing_period')) {
                obj['billing_period'] = ApiClient.convertToType(data['billing_period'], 'String');
            }
            if (data.hasOwnProperty('billing_reason')) {
                obj['billing_reason'] = ApiClient.convertToType(data['billing_reason'], 'String');
            }
            if (data.hasOwnProperty('billing_sequence')) {
                obj['billing_sequence'] = ApiClient.convertToType(data['billing_sequence'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = DtoCustomerResponse.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('due_date')) {
                obj['due_date'] = ApiClient.convertToType(data['due_date'], 'String');
            }
            if (data.hasOwnProperty('finalized_at')) {
                obj['finalized_at'] = ApiClient.convertToType(data['finalized_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idempotency_key')) {
                obj['idempotency_key'] = ApiClient.convertToType(data['idempotency_key'], 'String');
            }
            if (data.hasOwnProperty('invoice_number')) {
                obj['invoice_number'] = ApiClient.convertToType(data['invoice_number'], 'String');
            }
            if (data.hasOwnProperty('invoice_pdf_url')) {
                obj['invoice_pdf_url'] = ApiClient.convertToType(data['invoice_pdf_url'], 'String');
            }
            if (data.hasOwnProperty('invoice_status')) {
                obj['invoice_status'] = TypesInvoiceStatus.constructFromObject(data['invoice_status']);
            }
            if (data.hasOwnProperty('invoice_type')) {
                obj['invoice_type'] = TypesInvoiceType.constructFromObject(data['invoice_type']);
            }
            if (data.hasOwnProperty('line_items')) {
                obj['line_items'] = ApiClient.convertToType(data['line_items'], [DtoInvoiceLineItemResponse]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('paid_at')) {
                obj['paid_at'] = ApiClient.convertToType(data['paid_at'], 'String');
            }
            if (data.hasOwnProperty('payment_status')) {
                obj['payment_status'] = TypesPaymentStatus.constructFromObject(data['payment_status']);
            }
            if (data.hasOwnProperty('period_end')) {
                obj['period_end'] = ApiClient.convertToType(data['period_end'], 'String');
            }
            if (data.hasOwnProperty('period_start')) {
                obj['period_start'] = ApiClient.convertToType(data['period_start'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = DtoSubscriptionResponse.constructFromObject(data['subscription']);
            }
            if (data.hasOwnProperty('subscription_id')) {
                obj['subscription_id'] = ApiClient.convertToType(data['subscription_id'], 'String');
            }
            if (data.hasOwnProperty('tenant_id')) {
                obj['tenant_id'] = ApiClient.convertToType(data['tenant_id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('updated_by')) {
                obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('voided_at')) {
                obj['voided_at'] = ApiClient.convertToType(data['voided_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoInvoiceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoInvoiceResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['billing_period'] && !(typeof data['billing_period'] === 'string' || data['billing_period'] instanceof String)) {
            throw new Error("Expected the field `billing_period` to be a primitive type in the JSON string but got " + data['billing_period']);
        }
        // ensure the json data is a string
        if (data['billing_reason'] && !(typeof data['billing_reason'] === 'string' || data['billing_reason'] instanceof String)) {
            throw new Error("Expected the field `billing_reason` to be a primitive type in the JSON string but got " + data['billing_reason']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          DtoCustomerResponse.validateJSON(data['customer']);
        }
        // ensure the json data is a string
        if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
            throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['due_date'] && !(typeof data['due_date'] === 'string' || data['due_date'] instanceof String)) {
            throw new Error("Expected the field `due_date` to be a primitive type in the JSON string but got " + data['due_date']);
        }
        // ensure the json data is a string
        if (data['finalized_at'] && !(typeof data['finalized_at'] === 'string' || data['finalized_at'] instanceof String)) {
            throw new Error("Expected the field `finalized_at` to be a primitive type in the JSON string but got " + data['finalized_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['idempotency_key'] && !(typeof data['idempotency_key'] === 'string' || data['idempotency_key'] instanceof String)) {
            throw new Error("Expected the field `idempotency_key` to be a primitive type in the JSON string but got " + data['idempotency_key']);
        }
        // ensure the json data is a string
        if (data['invoice_number'] && !(typeof data['invoice_number'] === 'string' || data['invoice_number'] instanceof String)) {
            throw new Error("Expected the field `invoice_number` to be a primitive type in the JSON string but got " + data['invoice_number']);
        }
        // ensure the json data is a string
        if (data['invoice_pdf_url'] && !(typeof data['invoice_pdf_url'] === 'string' || data['invoice_pdf_url'] instanceof String)) {
            throw new Error("Expected the field `invoice_pdf_url` to be a primitive type in the JSON string but got " + data['invoice_pdf_url']);
        }
        if (data['line_items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['line_items'])) {
                throw new Error("Expected the field `line_items` to be an array in the JSON data but got " + data['line_items']);
            }
            // validate the optional field `line_items` (array)
            for (const item of data['line_items']) {
                DtoInvoiceLineItemResponse.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['paid_at'] && !(typeof data['paid_at'] === 'string' || data['paid_at'] instanceof String)) {
            throw new Error("Expected the field `paid_at` to be a primitive type in the JSON string but got " + data['paid_at']);
        }
        // ensure the json data is a string
        if (data['period_end'] && !(typeof data['period_end'] === 'string' || data['period_end'] instanceof String)) {
            throw new Error("Expected the field `period_end` to be a primitive type in the JSON string but got " + data['period_end']);
        }
        // ensure the json data is a string
        if (data['period_start'] && !(typeof data['period_start'] === 'string' || data['period_start'] instanceof String)) {
            throw new Error("Expected the field `period_start` to be a primitive type in the JSON string but got " + data['period_start']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `subscription`
        if (data['subscription']) { // data not null
          DtoSubscriptionResponse.validateJSON(data['subscription']);
        }
        // ensure the json data is a string
        if (data['subscription_id'] && !(typeof data['subscription_id'] === 'string' || data['subscription_id'] instanceof String)) {
            throw new Error("Expected the field `subscription_id` to be a primitive type in the JSON string but got " + data['subscription_id']);
        }
        // ensure the json data is a string
        if (data['tenant_id'] && !(typeof data['tenant_id'] === 'string' || data['tenant_id'] instanceof String)) {
            throw new Error("Expected the field `tenant_id` to be a primitive type in the JSON string but got " + data['tenant_id']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // ensure the json data is a string
        if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
            throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
        }
        // ensure the json data is a string
        if (data['voided_at'] && !(typeof data['voided_at'] === 'string' || data['voided_at'] instanceof String)) {
            throw new Error("Expected the field `voided_at` to be a primitive type in the JSON string but got " + data['voided_at']);
        }

        return true;
    }


}



/**
 * @member {Number} amount_due
 */
DtoInvoiceResponse.prototype['amount_due'] = undefined;

/**
 * @member {Number} amount_paid
 */
DtoInvoiceResponse.prototype['amount_paid'] = undefined;

/**
 * @member {Number} amount_remaining
 */
DtoInvoiceResponse.prototype['amount_remaining'] = undefined;

/**
 * @member {String} billing_period
 */
DtoInvoiceResponse.prototype['billing_period'] = undefined;

/**
 * @member {String} billing_reason
 */
DtoInvoiceResponse.prototype['billing_reason'] = undefined;

/**
 * @member {Number} billing_sequence
 */
DtoInvoiceResponse.prototype['billing_sequence'] = undefined;

/**
 * @member {String} created_at
 */
DtoInvoiceResponse.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
DtoInvoiceResponse.prototype['created_by'] = undefined;

/**
 * @member {String} currency
 */
DtoInvoiceResponse.prototype['currency'] = undefined;

/**
 * @member {module:model/DtoCustomerResponse} customer
 */
DtoInvoiceResponse.prototype['customer'] = undefined;

/**
 * @member {String} customer_id
 */
DtoInvoiceResponse.prototype['customer_id'] = undefined;

/**
 * @member {String} description
 */
DtoInvoiceResponse.prototype['description'] = undefined;

/**
 * @member {String} due_date
 */
DtoInvoiceResponse.prototype['due_date'] = undefined;

/**
 * @member {String} finalized_at
 */
DtoInvoiceResponse.prototype['finalized_at'] = undefined;

/**
 * @member {String} id
 */
DtoInvoiceResponse.prototype['id'] = undefined;

/**
 * @member {String} idempotency_key
 */
DtoInvoiceResponse.prototype['idempotency_key'] = undefined;

/**
 * @member {String} invoice_number
 */
DtoInvoiceResponse.prototype['invoice_number'] = undefined;

/**
 * @member {String} invoice_pdf_url
 */
DtoInvoiceResponse.prototype['invoice_pdf_url'] = undefined;

/**
 * @member {module:model/TypesInvoiceStatus} invoice_status
 */
DtoInvoiceResponse.prototype['invoice_status'] = undefined;

/**
 * @member {module:model/TypesInvoiceType} invoice_type
 */
DtoInvoiceResponse.prototype['invoice_type'] = undefined;

/**
 * @member {Array.<module:model/DtoInvoiceLineItemResponse>} line_items
 */
DtoInvoiceResponse.prototype['line_items'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
DtoInvoiceResponse.prototype['metadata'] = undefined;

/**
 * @member {String} paid_at
 */
DtoInvoiceResponse.prototype['paid_at'] = undefined;

/**
 * @member {module:model/TypesPaymentStatus} payment_status
 */
DtoInvoiceResponse.prototype['payment_status'] = undefined;

/**
 * @member {String} period_end
 */
DtoInvoiceResponse.prototype['period_end'] = undefined;

/**
 * @member {String} period_start
 */
DtoInvoiceResponse.prototype['period_start'] = undefined;

/**
 * @member {String} status
 */
DtoInvoiceResponse.prototype['status'] = undefined;

/**
 * @member {module:model/DtoSubscriptionResponse} subscription
 */
DtoInvoiceResponse.prototype['subscription'] = undefined;

/**
 * @member {String} subscription_id
 */
DtoInvoiceResponse.prototype['subscription_id'] = undefined;

/**
 * @member {String} tenant_id
 */
DtoInvoiceResponse.prototype['tenant_id'] = undefined;

/**
 * @member {String} updated_at
 */
DtoInvoiceResponse.prototype['updated_at'] = undefined;

/**
 * @member {String} updated_by
 */
DtoInvoiceResponse.prototype['updated_by'] = undefined;

/**
 * @member {Number} version
 */
DtoInvoiceResponse.prototype['version'] = undefined;

/**
 * @member {String} voided_at
 */
DtoInvoiceResponse.prototype['voided_at'] = undefined;






export default DtoInvoiceResponse;


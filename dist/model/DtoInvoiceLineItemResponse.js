/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoInvoiceLineItemResponse model module.
 * @module model/DtoInvoiceLineItemResponse
 * @version 1.0
 */
class DtoInvoiceLineItemResponse {
  /**
   * Constructs a new <code>DtoInvoiceLineItemResponse</code>.
   * @alias module:model/DtoInvoiceLineItemResponse
   */
  constructor() {
    DtoInvoiceLineItemResponse.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>DtoInvoiceLineItemResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoInvoiceLineItemResponse} obj Optional instance to populate.
   * @return {module:model/DtoInvoiceLineItemResponse} The populated <code>DtoInvoiceLineItemResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoInvoiceLineItemResponse();
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
      }
      if (data.hasOwnProperty('created_by')) {
        obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('customer_id')) {
        obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
      }
      if (data.hasOwnProperty('display_name')) {
        obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('invoice_id')) {
        obj['invoice_id'] = ApiClient.convertToType(data['invoice_id'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], {
          'String': 'String'
        });
      }
      if (data.hasOwnProperty('meter_display_name')) {
        obj['meter_display_name'] = ApiClient.convertToType(data['meter_display_name'], 'String');
      }
      if (data.hasOwnProperty('meter_id')) {
        obj['meter_id'] = ApiClient.convertToType(data['meter_id'], 'String');
      }
      if (data.hasOwnProperty('period_end')) {
        obj['period_end'] = ApiClient.convertToType(data['period_end'], 'String');
      }
      if (data.hasOwnProperty('period_start')) {
        obj['period_start'] = ApiClient.convertToType(data['period_start'], 'String');
      }
      if (data.hasOwnProperty('plan_display_name')) {
        obj['plan_display_name'] = ApiClient.convertToType(data['plan_display_name'], 'String');
      }
      if (data.hasOwnProperty('plan_id')) {
        obj['plan_id'] = ApiClient.convertToType(data['plan_id'], 'String');
      }
      if (data.hasOwnProperty('price_id')) {
        obj['price_id'] = ApiClient.convertToType(data['price_id'], 'String');
      }
      if (data.hasOwnProperty('price_type')) {
        obj['price_type'] = ApiClient.convertToType(data['price_type'], 'String');
      }
      if (data.hasOwnProperty('quantity')) {
        obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('subscription_id')) {
        obj['subscription_id'] = ApiClient.convertToType(data['subscription_id'], 'String');
      }
      if (data.hasOwnProperty('tenant_id')) {
        obj['tenant_id'] = ApiClient.convertToType(data['tenant_id'], 'String');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
      }
      if (data.hasOwnProperty('updated_by')) {
        obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoInvoiceLineItemResponse</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoInvoiceLineItemResponse</code>.
   */
  static validateJSON(data) {
    // ensure the json data is a string
    if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
      throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
    }
    // ensure the json data is a string
    if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
      throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
    }
    // ensure the json data is a string
    if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
      throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
    }
    // ensure the json data is a string
    if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
      throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
    }
    // ensure the json data is a string
    if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
      throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // ensure the json data is a string
    if (data['invoice_id'] && !(typeof data['invoice_id'] === 'string' || data['invoice_id'] instanceof String)) {
      throw new Error("Expected the field `invoice_id` to be a primitive type in the JSON string but got " + data['invoice_id']);
    }
    // ensure the json data is a string
    if (data['meter_display_name'] && !(typeof data['meter_display_name'] === 'string' || data['meter_display_name'] instanceof String)) {
      throw new Error("Expected the field `meter_display_name` to be a primitive type in the JSON string but got " + data['meter_display_name']);
    }
    // ensure the json data is a string
    if (data['meter_id'] && !(typeof data['meter_id'] === 'string' || data['meter_id'] instanceof String)) {
      throw new Error("Expected the field `meter_id` to be a primitive type in the JSON string but got " + data['meter_id']);
    }
    // ensure the json data is a string
    if (data['period_end'] && !(typeof data['period_end'] === 'string' || data['period_end'] instanceof String)) {
      throw new Error("Expected the field `period_end` to be a primitive type in the JSON string but got " + data['period_end']);
    }
    // ensure the json data is a string
    if (data['period_start'] && !(typeof data['period_start'] === 'string' || data['period_start'] instanceof String)) {
      throw new Error("Expected the field `period_start` to be a primitive type in the JSON string but got " + data['period_start']);
    }
    // ensure the json data is a string
    if (data['plan_display_name'] && !(typeof data['plan_display_name'] === 'string' || data['plan_display_name'] instanceof String)) {
      throw new Error("Expected the field `plan_display_name` to be a primitive type in the JSON string but got " + data['plan_display_name']);
    }
    // ensure the json data is a string
    if (data['plan_id'] && !(typeof data['plan_id'] === 'string' || data['plan_id'] instanceof String)) {
      throw new Error("Expected the field `plan_id` to be a primitive type in the JSON string but got " + data['plan_id']);
    }
    // ensure the json data is a string
    if (data['price_id'] && !(typeof data['price_id'] === 'string' || data['price_id'] instanceof String)) {
      throw new Error("Expected the field `price_id` to be a primitive type in the JSON string but got " + data['price_id']);
    }
    // ensure the json data is a string
    if (data['price_type'] && !(typeof data['price_type'] === 'string' || data['price_type'] instanceof String)) {
      throw new Error("Expected the field `price_type` to be a primitive type in the JSON string but got " + data['price_type']);
    }
    // ensure the json data is a string
    if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
      throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
    }
    // ensure the json data is a string
    if (data['subscription_id'] && !(typeof data['subscription_id'] === 'string' || data['subscription_id'] instanceof String)) {
      throw new Error("Expected the field `subscription_id` to be a primitive type in the JSON string but got " + data['subscription_id']);
    }
    // ensure the json data is a string
    if (data['tenant_id'] && !(typeof data['tenant_id'] === 'string' || data['tenant_id'] instanceof String)) {
      throw new Error("Expected the field `tenant_id` to be a primitive type in the JSON string but got " + data['tenant_id']);
    }
    // ensure the json data is a string
    if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
      throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
    }
    // ensure the json data is a string
    if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
      throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
    }
    return true;
  }
}

/**
 * @member {Number} amount
 */
DtoInvoiceLineItemResponse.prototype['amount'] = undefined;

/**
 * @member {String} created_at
 */
DtoInvoiceLineItemResponse.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
DtoInvoiceLineItemResponse.prototype['created_by'] = undefined;

/**
 * @member {String} currency
 */
DtoInvoiceLineItemResponse.prototype['currency'] = undefined;

/**
 * @member {String} customer_id
 */
DtoInvoiceLineItemResponse.prototype['customer_id'] = undefined;

/**
 * @member {String} display_name
 */
DtoInvoiceLineItemResponse.prototype['display_name'] = undefined;

/**
 * @member {String} id
 */
DtoInvoiceLineItemResponse.prototype['id'] = undefined;

/**
 * @member {String} invoice_id
 */
DtoInvoiceLineItemResponse.prototype['invoice_id'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
DtoInvoiceLineItemResponse.prototype['metadata'] = undefined;

/**
 * @member {String} meter_display_name
 */
DtoInvoiceLineItemResponse.prototype['meter_display_name'] = undefined;

/**
 * @member {String} meter_id
 */
DtoInvoiceLineItemResponse.prototype['meter_id'] = undefined;

/**
 * @member {String} period_end
 */
DtoInvoiceLineItemResponse.prototype['period_end'] = undefined;

/**
 * @member {String} period_start
 */
DtoInvoiceLineItemResponse.prototype['period_start'] = undefined;

/**
 * @member {String} plan_display_name
 */
DtoInvoiceLineItemResponse.prototype['plan_display_name'] = undefined;

/**
 * @member {String} plan_id
 */
DtoInvoiceLineItemResponse.prototype['plan_id'] = undefined;

/**
 * @member {String} price_id
 */
DtoInvoiceLineItemResponse.prototype['price_id'] = undefined;

/**
 * @member {String} price_type
 */
DtoInvoiceLineItemResponse.prototype['price_type'] = undefined;

/**
 * @member {Number} quantity
 */
DtoInvoiceLineItemResponse.prototype['quantity'] = undefined;

/**
 * @member {String} status
 */
DtoInvoiceLineItemResponse.prototype['status'] = undefined;

/**
 * @member {String} subscription_id
 */
DtoInvoiceLineItemResponse.prototype['subscription_id'] = undefined;

/**
 * @member {String} tenant_id
 */
DtoInvoiceLineItemResponse.prototype['tenant_id'] = undefined;

/**
 * @member {String} updated_at
 */
DtoInvoiceLineItemResponse.prototype['updated_at'] = undefined;

/**
 * @member {String} updated_by
 */
DtoInvoiceLineItemResponse.prototype['updated_by'] = undefined;
export default DtoInvoiceLineItemResponse;
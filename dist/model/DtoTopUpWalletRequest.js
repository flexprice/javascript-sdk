/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TypesTransactionReason from './TypesTransactionReason';

/**
 * The DtoTopUpWalletRequest model module.
 * @module model/DtoTopUpWalletRequest
 * @version 1.0
 */
class DtoTopUpWalletRequest {
  /**
   * Constructs a new <code>DtoTopUpWalletRequest</code>.
   * @alias module:model/DtoTopUpWalletRequest
   * @param idempotencyKey {String} idempotency_key is a unique key for the transaction
   * @param transactionReason {module:model/TypesTransactionReason} 
   */
  constructor(idempotencyKey, transactionReason) {
    DtoTopUpWalletRequest.initialize(this, idempotencyKey, transactionReason);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, idempotencyKey, transactionReason) {
    obj['idempotency_key'] = idempotencyKey;
    obj['transaction_reason'] = transactionReason;
  }

  /**
   * Constructs a <code>DtoTopUpWalletRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoTopUpWalletRequest} obj Optional instance to populate.
   * @return {module:model/DtoTopUpWalletRequest} The populated <code>DtoTopUpWalletRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoTopUpWalletRequest();
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('credits_to_add')) {
        obj['credits_to_add'] = ApiClient.convertToType(data['credits_to_add'], 'Number');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('expiry_date_utc')) {
        obj['expiry_date_utc'] = ApiClient.convertToType(data['expiry_date_utc'], 'String');
      }
      if (data.hasOwnProperty('idempotency_key')) {
        obj['idempotency_key'] = ApiClient.convertToType(data['idempotency_key'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], {
          'String': 'String'
        });
      }
      if (data.hasOwnProperty('transaction_reason')) {
        obj['transaction_reason'] = TypesTransactionReason.constructFromObject(data['transaction_reason']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoTopUpWalletRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoTopUpWalletRequest</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DtoTopUpWalletRequest.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
      throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
    }
    // ensure the json data is a string
    if (data['expiry_date_utc'] && !(typeof data['expiry_date_utc'] === 'string' || data['expiry_date_utc'] instanceof String)) {
      throw new Error("Expected the field `expiry_date_utc` to be a primitive type in the JSON string but got " + data['expiry_date_utc']);
    }
    // ensure the json data is a string
    if (data['idempotency_key'] && !(typeof data['idempotency_key'] === 'string' || data['idempotency_key'] instanceof String)) {
      throw new Error("Expected the field `idempotency_key` to be a primitive type in the JSON string but got " + data['idempotency_key']);
    }
    return true;
  }
}
DtoTopUpWalletRequest.RequiredProperties = ["idempotency_key", "transaction_reason"];

/**
 * amount is the amount in the currency of the wallet to be added NOTE: this is not the number of credits to add, but the amount in the currency amount = credits_to_add * conversion_rate if both amount and credits_to_add are provided, amount will be ignored ex if the wallet has a conversion_rate of 2 then adding an amount of 10 USD in the wallet wil add 5 credits in the wallet
 * @member {Number} amount
 */
DtoTopUpWalletRequest.prototype['amount'] = undefined;

/**
 * credits_to_add is the number of credits to add to the wallet
 * @member {Number} credits_to_add
 */
DtoTopUpWalletRequest.prototype['credits_to_add'] = undefined;

/**
 * description to add any specific details about the transaction
 * @member {String} description
 */
DtoTopUpWalletRequest.prototype['description'] = undefined;

/**
 * expiry_date_utc is the expiry date in UTC timezone ex 2025-01-01 00:00:00 UTC
 * @member {String} expiry_date_utc
 */
DtoTopUpWalletRequest.prototype['expiry_date_utc'] = undefined;

/**
 * idempotency_key is a unique key for the transaction
 * @member {String} idempotency_key
 */
DtoTopUpWalletRequest.prototype['idempotency_key'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
DtoTopUpWalletRequest.prototype['metadata'] = undefined;

/**
 * @member {module:model/TypesTransactionReason} transaction_reason
 */
DtoTopUpWalletRequest.prototype['transaction_reason'] = undefined;
export default DtoTopUpWalletRequest;
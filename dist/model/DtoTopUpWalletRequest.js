/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoTopUpWalletRequest model module.
 * @module model/DtoTopUpWalletRequest
 * @version 1.0
 */
class DtoTopUpWalletRequest {
  /**
   * Constructs a new <code>DtoTopUpWalletRequest</code>.
   * @alias module:model/DtoTopUpWalletRequest
   * @param amount {Number} amount is the number of credits to add to the wallet
   */
  constructor(amount) {
    DtoTopUpWalletRequest.initialize(this, amount);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, amount) {
    obj['amount'] = amount;
  }

  /**
   * Constructs a <code>DtoTopUpWalletRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoTopUpWalletRequest} obj Optional instance to populate.
   * @return {module:model/DtoTopUpWalletRequest} The populated <code>DtoTopUpWalletRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoTopUpWalletRequest();
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('expiry_date')) {
        obj['expiry_date'] = ApiClient.convertToType(data['expiry_date'], 'Number');
      }
      if (data.hasOwnProperty('generate_invoice')) {
        obj['generate_invoice'] = ApiClient.convertToType(data['generate_invoice'], 'Boolean');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], {
          'String': 'String'
        });
      }
      if (data.hasOwnProperty('purchased_credits')) {
        obj['purchased_credits'] = ApiClient.convertToType(data['purchased_credits'], 'Boolean');
      }
      if (data.hasOwnProperty('reference_id')) {
        obj['reference_id'] = ApiClient.convertToType(data['reference_id'], 'String');
      }
      if (data.hasOwnProperty('reference_type')) {
        obj['reference_type'] = ApiClient.convertToType(data['reference_type'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoTopUpWalletRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoTopUpWalletRequest</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DtoTopUpWalletRequest.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
      throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
    }
    // ensure the json data is a string
    if (data['reference_id'] && !(typeof data['reference_id'] === 'string' || data['reference_id'] instanceof String)) {
      throw new Error("Expected the field `reference_id` to be a primitive type in the JSON string but got " + data['reference_id']);
    }
    // ensure the json data is a string
    if (data['reference_type'] && !(typeof data['reference_type'] === 'string' || data['reference_type'] instanceof String)) {
      throw new Error("Expected the field `reference_type` to be a primitive type in the JSON string but got " + data['reference_type']);
    }
    return true;
  }
}
DtoTopUpWalletRequest.RequiredProperties = ["amount"];

/**
 * amount is the number of credits to add to the wallet
 * @member {Number} amount
 */
DtoTopUpWalletRequest.prototype['amount'] = undefined;

/**
 * description to add any specific details about the transaction
 * @member {String} description
 */
DtoTopUpWalletRequest.prototype['description'] = undefined;

/**
 * expiry_date YYYYMMDD format in UTC timezone (optional to set nil means no expiry) for ex 20250101 means the credits will expire on 2025-01-01 00:00:00 UTC hence they will be available for use until 2024-12-31 23:59:59 UTC
 * @member {Number} expiry_date
 */
DtoTopUpWalletRequest.prototype['expiry_date'] = undefined;

/**
 * generate_invoice when true, an invoice will be generated for the transaction
 * @member {Boolean} generate_invoice
 */
DtoTopUpWalletRequest.prototype['generate_invoice'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
DtoTopUpWalletRequest.prototype['metadata'] = undefined;

/**
 * purchased_credits when true, the credits are added as purchased credits
 * @member {Boolean} purchased_credits
 */
DtoTopUpWalletRequest.prototype['purchased_credits'] = undefined;

/**
 * reference_id is the ID of the reference ex payment ID, invoice ID, request ID
 * @member {String} reference_id
 */
DtoTopUpWalletRequest.prototype['reference_id'] = undefined;

/**
 * reference_type is the type of the reference ex payment, invoice, request
 * @member {String} reference_type
 */
DtoTopUpWalletRequest.prototype['reference_type'] = undefined;
export default DtoTopUpWalletRequest;
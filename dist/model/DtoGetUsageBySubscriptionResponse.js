/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DtoSubscriptionUsageByMetersResponse from './DtoSubscriptionUsageByMetersResponse';

/**
 * The DtoGetUsageBySubscriptionResponse model module.
 * @module model/DtoGetUsageBySubscriptionResponse
 * @version 1.0
 */
class DtoGetUsageBySubscriptionResponse {
  /**
   * Constructs a new <code>DtoGetUsageBySubscriptionResponse</code>.
   * @alias module:model/DtoGetUsageBySubscriptionResponse
   */
  constructor() {
    DtoGetUsageBySubscriptionResponse.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>DtoGetUsageBySubscriptionResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoGetUsageBySubscriptionResponse} obj Optional instance to populate.
   * @return {module:model/DtoGetUsageBySubscriptionResponse} The populated <code>DtoGetUsageBySubscriptionResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoGetUsageBySubscriptionResponse();
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('charges')) {
        obj['charges'] = ApiClient.convertToType(data['charges'], [DtoSubscriptionUsageByMetersResponse]);
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('display_amount')) {
        obj['display_amount'] = ApiClient.convertToType(data['display_amount'], 'String');
      }
      if (data.hasOwnProperty('end_time')) {
        obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
      }
      if (data.hasOwnProperty('start_time')) {
        obj['start_time'] = ApiClient.convertToType(data['start_time'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoGetUsageBySubscriptionResponse</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoGetUsageBySubscriptionResponse</code>.
   */
  static validateJSON(data) {
    if (data['charges']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['charges'])) {
        throw new Error("Expected the field `charges` to be an array in the JSON data but got " + data['charges']);
      }
      // validate the optional field `charges` (array)
      for (const item of data['charges']) {
        DtoSubscriptionUsageByMetersResponse.validateJSON(item);
      }
      ;
    }
    // ensure the json data is a string
    if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
      throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
    }
    // ensure the json data is a string
    if (data['display_amount'] && !(typeof data['display_amount'] === 'string' || data['display_amount'] instanceof String)) {
      throw new Error("Expected the field `display_amount` to be a primitive type in the JSON string but got " + data['display_amount']);
    }
    // ensure the json data is a string
    if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
      throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
    }
    // ensure the json data is a string
    if (data['start_time'] && !(typeof data['start_time'] === 'string' || data['start_time'] instanceof String)) {
      throw new Error("Expected the field `start_time` to be a primitive type in the JSON string but got " + data['start_time']);
    }
    return true;
  }
}

/**
 * @member {Number} amount
 */
DtoGetUsageBySubscriptionResponse.prototype['amount'] = undefined;

/**
 * @member {Array.<module:model/DtoSubscriptionUsageByMetersResponse>} charges
 */
DtoGetUsageBySubscriptionResponse.prototype['charges'] = undefined;

/**
 * @member {String} currency
 */
DtoGetUsageBySubscriptionResponse.prototype['currency'] = undefined;

/**
 * @member {String} display_amount
 */
DtoGetUsageBySubscriptionResponse.prototype['display_amount'] = undefined;

/**
 * @member {String} end_time
 */
DtoGetUsageBySubscriptionResponse.prototype['end_time'] = undefined;

/**
 * @member {String} start_time
 */
DtoGetUsageBySubscriptionResponse.prototype['start_time'] = undefined;
export default DtoGetUsageBySubscriptionResponse;
/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DtoEntitlementSource from './DtoEntitlementSource';
import DtoFeatureResponse from './DtoFeatureResponse';

/**
 * The DtoFeatureUsageSummary model module.
 * @module model/DtoFeatureUsageSummary
 * @version 1.0
 */
class DtoFeatureUsageSummary {
  /**
   * Constructs a new <code>DtoFeatureUsageSummary</code>.
   * @alias module:model/DtoFeatureUsageSummary
   */
  constructor() {
    DtoFeatureUsageSummary.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>DtoFeatureUsageSummary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoFeatureUsageSummary} obj Optional instance to populate.
   * @return {module:model/DtoFeatureUsageSummary} The populated <code>DtoFeatureUsageSummary</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoFeatureUsageSummary();
      if (data.hasOwnProperty('current_usage')) {
        obj['current_usage'] = ApiClient.convertToType(data['current_usage'], 'Number');
      }
      if (data.hasOwnProperty('feature')) {
        obj['feature'] = DtoFeatureResponse.constructFromObject(data['feature']);
      }
      if (data.hasOwnProperty('is_enabled')) {
        obj['is_enabled'] = ApiClient.convertToType(data['is_enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('is_soft_limit')) {
        obj['is_soft_limit'] = ApiClient.convertToType(data['is_soft_limit'], 'Boolean');
      }
      if (data.hasOwnProperty('sources')) {
        obj['sources'] = ApiClient.convertToType(data['sources'], [DtoEntitlementSource]);
      }
      if (data.hasOwnProperty('total_limit')) {
        obj['total_limit'] = ApiClient.convertToType(data['total_limit'], 'Number');
      }
      if (data.hasOwnProperty('usage_percent')) {
        obj['usage_percent'] = ApiClient.convertToType(data['usage_percent'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoFeatureUsageSummary</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoFeatureUsageSummary</code>.
   */
  static validateJSON(data) {
    // validate the optional field `feature`
    if (data['feature']) {
      // data not null
      DtoFeatureResponse.validateJSON(data['feature']);
    }
    if (data['sources']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['sources'])) {
        throw new Error("Expected the field `sources` to be an array in the JSON data but got " + data['sources']);
      }
      // validate the optional field `sources` (array)
      for (const item of data['sources']) {
        DtoEntitlementSource.validateJSON(item);
      }
      ;
    }
    return true;
  }
}

/**
 * @member {Number} current_usage
 */
DtoFeatureUsageSummary.prototype['current_usage'] = undefined;

/**
 * @member {module:model/DtoFeatureResponse} feature
 */
DtoFeatureUsageSummary.prototype['feature'] = undefined;

/**
 * @member {Boolean} is_enabled
 */
DtoFeatureUsageSummary.prototype['is_enabled'] = undefined;

/**
 * @member {Boolean} is_soft_limit
 */
DtoFeatureUsageSummary.prototype['is_soft_limit'] = undefined;

/**
 * @member {Array.<module:model/DtoEntitlementSource>} sources
 */
DtoFeatureUsageSummary.prototype['sources'] = undefined;

/**
 * @member {Number} total_limit
 */
DtoFeatureUsageSummary.prototype['total_limit'] = undefined;

/**
 * @member {Number} usage_percent
 */
DtoFeatureUsageSummary.prototype['usage_percent'] = undefined;
export default DtoFeatureUsageSummary;
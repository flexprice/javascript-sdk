/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DtoUsageResult from './DtoUsageResult';
import TypesAggregationType from './TypesAggregationType';

/**
 * The DtoGetUsageResponse model module.
 * @module model/DtoGetUsageResponse
 * @version 1.0
 */
class DtoGetUsageResponse {
  /**
   * Constructs a new <code>DtoGetUsageResponse</code>.
   * @alias module:model/DtoGetUsageResponse
   */
  constructor() {
    DtoGetUsageResponse.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>DtoGetUsageResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoGetUsageResponse} obj Optional instance to populate.
   * @return {module:model/DtoGetUsageResponse} The populated <code>DtoGetUsageResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoGetUsageResponse();
      if (data.hasOwnProperty('event_name')) {
        obj['event_name'] = ApiClient.convertToType(data['event_name'], 'String');
      }
      if (data.hasOwnProperty('results')) {
        obj['results'] = ApiClient.convertToType(data['results'], [DtoUsageResult]);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = TypesAggregationType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('value')) {
        obj['value'] = ApiClient.convertToType(data['value'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoGetUsageResponse</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoGetUsageResponse</code>.
   */
  static validateJSON(data) {
    // ensure the json data is a string
    if (data['event_name'] && !(typeof data['event_name'] === 'string' || data['event_name'] instanceof String)) {
      throw new Error("Expected the field `event_name` to be a primitive type in the JSON string but got " + data['event_name']);
    }
    if (data['results']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['results'])) {
        throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
      }
      // validate the optional field `results` (array)
      for (const item of data['results']) {
        DtoUsageResult.validateJSON(item);
      }
      ;
    }
    return true;
  }
}

/**
 * @member {String} event_name
 */
DtoGetUsageResponse.prototype['event_name'] = undefined;

/**
 * @member {Array.<module:model/DtoUsageResult>} results
 */
DtoGetUsageResponse.prototype['results'] = undefined;

/**
 * @member {module:model/TypesAggregationType} type
 */
DtoGetUsageResponse.prototype['type'] = undefined;

/**
 * @member {Number} value
 */
DtoGetUsageResponse.prototype['value'] = undefined;
export default DtoGetUsageResponse;
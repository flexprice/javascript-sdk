/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DtoAddress from './DtoAddress';

/**
 * The DtoTenantBillingDetails model module.
 * @module model/DtoTenantBillingDetails
 * @version 1.0
 */
class DtoTenantBillingDetails {
  /**
   * Constructs a new <code>DtoTenantBillingDetails</code>.
   * @alias module:model/DtoTenantBillingDetails
   */
  constructor() {
    DtoTenantBillingDetails.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>DtoTenantBillingDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoTenantBillingDetails} obj Optional instance to populate.
   * @return {module:model/DtoTenantBillingDetails} The populated <code>DtoTenantBillingDetails</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoTenantBillingDetails();
      if (data.hasOwnProperty('address')) {
        obj['address'] = DtoAddress.constructFromObject(data['address']);
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('help_email')) {
        obj['help_email'] = ApiClient.convertToType(data['help_email'], 'String');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoTenantBillingDetails</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoTenantBillingDetails</code>.
   */
  static validateJSON(data) {
    // validate the optional field `address`
    if (data['address']) {
      // data not null
      DtoAddress.validateJSON(data['address']);
    }
    // ensure the json data is a string
    if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
      throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
    }
    // ensure the json data is a string
    if (data['help_email'] && !(typeof data['help_email'] === 'string' || data['help_email'] instanceof String)) {
      throw new Error("Expected the field `help_email` to be a primitive type in the JSON string but got " + data['help_email']);
    }
    // ensure the json data is a string
    if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
      throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
    }
    return true;
  }
}

/**
 * @member {module:model/DtoAddress} address
 */
DtoTenantBillingDetails.prototype['address'] = undefined;

/**
 * @member {String} email
 */
DtoTenantBillingDetails.prototype['email'] = undefined;

/**
 * @member {String} help_email
 */
DtoTenantBillingDetails.prototype['help_email'] = undefined;

/**
 * @member {String} phone
 */
DtoTenantBillingDetails.prototype['phone'] = undefined;
export default DtoTenantBillingDetails;
/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TypesFeatureType from './TypesFeatureType';

/**
 * The DtoCreateFeatureRequest model module.
 * @module model/DtoCreateFeatureRequest
 * @version 1.0
 */
class DtoCreateFeatureRequest {
  /**
   * Constructs a new <code>DtoCreateFeatureRequest</code>.
   * @alias module:model/DtoCreateFeatureRequest
   * @param name {String} 
   * @param type {module:model/TypesFeatureType} 
   */
  constructor(name, type) {
    DtoCreateFeatureRequest.initialize(this, name, type);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, name, type) {
    obj['name'] = name;
    obj['type'] = type;
  }

  /**
   * Constructs a <code>DtoCreateFeatureRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoCreateFeatureRequest} obj Optional instance to populate.
   * @return {module:model/DtoCreateFeatureRequest} The populated <code>DtoCreateFeatureRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoCreateFeatureRequest();
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('lookup_key')) {
        obj['lookup_key'] = ApiClient.convertToType(data['lookup_key'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], {
          'String': 'String'
        });
      }
      if (data.hasOwnProperty('meter_id')) {
        obj['meter_id'] = ApiClient.convertToType(data['meter_id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = TypesFeatureType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('unit_plural')) {
        obj['unit_plural'] = ApiClient.convertToType(data['unit_plural'], 'String');
      }
      if (data.hasOwnProperty('unit_singular')) {
        obj['unit_singular'] = ApiClient.convertToType(data['unit_singular'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoCreateFeatureRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoCreateFeatureRequest</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DtoCreateFeatureRequest.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
      throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
    }
    // ensure the json data is a string
    if (data['lookup_key'] && !(typeof data['lookup_key'] === 'string' || data['lookup_key'] instanceof String)) {
      throw new Error("Expected the field `lookup_key` to be a primitive type in the JSON string but got " + data['lookup_key']);
    }
    // ensure the json data is a string
    if (data['meter_id'] && !(typeof data['meter_id'] === 'string' || data['meter_id'] instanceof String)) {
      throw new Error("Expected the field `meter_id` to be a primitive type in the JSON string but got " + data['meter_id']);
    }
    // ensure the json data is a string
    if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
      throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
    }
    // ensure the json data is a string
    if (data['unit_plural'] && !(typeof data['unit_plural'] === 'string' || data['unit_plural'] instanceof String)) {
      throw new Error("Expected the field `unit_plural` to be a primitive type in the JSON string but got " + data['unit_plural']);
    }
    // ensure the json data is a string
    if (data['unit_singular'] && !(typeof data['unit_singular'] === 'string' || data['unit_singular'] instanceof String)) {
      throw new Error("Expected the field `unit_singular` to be a primitive type in the JSON string but got " + data['unit_singular']);
    }
    return true;
  }
}
DtoCreateFeatureRequest.RequiredProperties = ["name", "type"];

/**
 * @member {String} description
 */
DtoCreateFeatureRequest.prototype['description'] = undefined;

/**
 * @member {String} lookup_key
 */
DtoCreateFeatureRequest.prototype['lookup_key'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
DtoCreateFeatureRequest.prototype['metadata'] = undefined;

/**
 * @member {String} meter_id
 */
DtoCreateFeatureRequest.prototype['meter_id'] = undefined;

/**
 * @member {String} name
 */
DtoCreateFeatureRequest.prototype['name'] = undefined;

/**
 * @member {module:model/TypesFeatureType} type
 */
DtoCreateFeatureRequest.prototype['type'] = undefined;

/**
 * @member {String} unit_plural
 */
DtoCreateFeatureRequest.prototype['unit_plural'] = undefined;

/**
 * @member {String} unit_singular
 */
DtoCreateFeatureRequest.prototype['unit_singular'] = undefined;
export default DtoCreateFeatureRequest;
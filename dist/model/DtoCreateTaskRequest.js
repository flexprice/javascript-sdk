/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TypesEntityType from './TypesEntityType';
import TypesFileType from './TypesFileType';
import TypesTaskType from './TypesTaskType';

/**
 * The DtoCreateTaskRequest model module.
 * @module model/DtoCreateTaskRequest
 * @version 1.0
 */
class DtoCreateTaskRequest {
  /**
   * Constructs a new <code>DtoCreateTaskRequest</code>.
   * @alias module:model/DtoCreateTaskRequest
   * @param entityType {module:model/TypesEntityType} 
   * @param fileType {module:model/TypesFileType} 
   * @param fileUrl {String} 
   * @param taskType {module:model/TypesTaskType} 
   */
  constructor(entityType, fileType, fileUrl, taskType) {
    DtoCreateTaskRequest.initialize(this, entityType, fileType, fileUrl, taskType);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, entityType, fileType, fileUrl, taskType) {
    obj['entity_type'] = entityType;
    obj['file_type'] = fileType;
    obj['file_url'] = fileUrl;
    obj['task_type'] = taskType;
  }

  /**
   * Constructs a <code>DtoCreateTaskRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoCreateTaskRequest} obj Optional instance to populate.
   * @return {module:model/DtoCreateTaskRequest} The populated <code>DtoCreateTaskRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoCreateTaskRequest();
      if (data.hasOwnProperty('entity_type')) {
        obj['entity_type'] = TypesEntityType.constructFromObject(data['entity_type']);
      }
      if (data.hasOwnProperty('file_name')) {
        obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
      }
      if (data.hasOwnProperty('file_type')) {
        obj['file_type'] = TypesFileType.constructFromObject(data['file_type']);
      }
      if (data.hasOwnProperty('file_url')) {
        obj['file_url'] = ApiClient.convertToType(data['file_url'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], {
          'String': Object
        });
      }
      if (data.hasOwnProperty('task_type')) {
        obj['task_type'] = TypesTaskType.constructFromObject(data['task_type']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoCreateTaskRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoCreateTaskRequest</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DtoCreateTaskRequest.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['file_name'] && !(typeof data['file_name'] === 'string' || data['file_name'] instanceof String)) {
      throw new Error("Expected the field `file_name` to be a primitive type in the JSON string but got " + data['file_name']);
    }
    // ensure the json data is a string
    if (data['file_url'] && !(typeof data['file_url'] === 'string' || data['file_url'] instanceof String)) {
      throw new Error("Expected the field `file_url` to be a primitive type in the JSON string but got " + data['file_url']);
    }
    return true;
  }
}
DtoCreateTaskRequest.RequiredProperties = ["entity_type", "file_type", "file_url", "task_type"];

/**
 * @member {module:model/TypesEntityType} entity_type
 */
DtoCreateTaskRequest.prototype['entity_type'] = undefined;

/**
 * @member {String} file_name
 */
DtoCreateTaskRequest.prototype['file_name'] = undefined;

/**
 * @member {module:model/TypesFileType} file_type
 */
DtoCreateTaskRequest.prototype['file_type'] = undefined;

/**
 * @member {String} file_url
 */
DtoCreateTaskRequest.prototype['file_url'] = undefined;

/**
 * @member {Object.<String, Object>} metadata
 */
DtoCreateTaskRequest.prototype['metadata'] = undefined;

/**
 * @member {module:model/TypesTaskType} task_type
 */
DtoCreateTaskRequest.prototype['task_type'] = undefined;
export default DtoCreateTaskRequest;
/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TypesSecretType from './TypesSecretType';

/**
 * The DtoCreateAPIKeyRequest model module.
 * @module model/DtoCreateAPIKeyRequest
 * @version 1.0
 */
class DtoCreateAPIKeyRequest {
  /**
   * Constructs a new <code>DtoCreateAPIKeyRequest</code>.
   * @alias module:model/DtoCreateAPIKeyRequest
   * @param name {String} 
   * @param type {module:model/TypesSecretType} 
   */
  constructor(name, type) {
    DtoCreateAPIKeyRequest.initialize(this, name, type);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, name, type) {
    obj['name'] = name;
    obj['type'] = type;
  }

  /**
   * Constructs a <code>DtoCreateAPIKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoCreateAPIKeyRequest} obj Optional instance to populate.
   * @return {module:model/DtoCreateAPIKeyRequest} The populated <code>DtoCreateAPIKeyRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoCreateAPIKeyRequest();
      if (data.hasOwnProperty('expires_at')) {
        obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('permissions')) {
        obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = TypesSecretType.constructFromObject(data['type']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoCreateAPIKeyRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoCreateAPIKeyRequest</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DtoCreateAPIKeyRequest.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['expires_at'] && !(typeof data['expires_at'] === 'string' || data['expires_at'] instanceof String)) {
      throw new Error("Expected the field `expires_at` to be a primitive type in the JSON string but got " + data['expires_at']);
    }
    // ensure the json data is a string
    if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
      throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
    }
    // ensure the json data is an array
    if (!Array.isArray(data['permissions'])) {
      throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
    }
    return true;
  }
}
DtoCreateAPIKeyRequest.RequiredProperties = ["name", "type"];

/**
 * @member {String} expires_at
 */
DtoCreateAPIKeyRequest.prototype['expires_at'] = undefined;

/**
 * @member {String} name
 */
DtoCreateAPIKeyRequest.prototype['name'] = undefined;

/**
 * @member {Array.<String>} permissions
 */
DtoCreateAPIKeyRequest.prototype['permissions'] = undefined;

/**
 * @member {module:model/TypesSecretType} type
 */
DtoCreateAPIKeyRequest.prototype['type'] = undefined;
export default DtoCreateAPIKeyRequest;
/**
 * FlexPrice API
 * FlexPrice API Service
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TypesStatus from './TypesStatus';

/**
 * The DtoCustomerResponse model module.
 * @module model/DtoCustomerResponse
 * @version 1.0
 */
class DtoCustomerResponse {
  /**
   * Constructs a new <code>DtoCustomerResponse</code>.
   * @alias module:model/DtoCustomerResponse
   */
  constructor() {
    DtoCustomerResponse.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>DtoCustomerResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DtoCustomerResponse} obj Optional instance to populate.
   * @return {module:model/DtoCustomerResponse} The populated <code>DtoCustomerResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DtoCustomerResponse();
      if (data.hasOwnProperty('address_city')) {
        obj['address_city'] = ApiClient.convertToType(data['address_city'], 'String');
      }
      if (data.hasOwnProperty('address_country')) {
        obj['address_country'] = ApiClient.convertToType(data['address_country'], 'String');
      }
      if (data.hasOwnProperty('address_line1')) {
        obj['address_line1'] = ApiClient.convertToType(data['address_line1'], 'String');
      }
      if (data.hasOwnProperty('address_line2')) {
        obj['address_line2'] = ApiClient.convertToType(data['address_line2'], 'String');
      }
      if (data.hasOwnProperty('address_postal_code')) {
        obj['address_postal_code'] = ApiClient.convertToType(data['address_postal_code'], 'String');
      }
      if (data.hasOwnProperty('address_state')) {
        obj['address_state'] = ApiClient.convertToType(data['address_state'], 'String');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
      }
      if (data.hasOwnProperty('created_by')) {
        obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('environment_id')) {
        obj['environment_id'] = ApiClient.convertToType(data['environment_id'], 'String');
      }
      if (data.hasOwnProperty('external_id')) {
        obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], {
          'String': 'String'
        });
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = TypesStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('tenant_id')) {
        obj['tenant_id'] = ApiClient.convertToType(data['tenant_id'], 'String');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
      }
      if (data.hasOwnProperty('updated_by')) {
        obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DtoCustomerResponse</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoCustomerResponse</code>.
   */
  static validateJSON(data) {
    // ensure the json data is a string
    if (data['address_city'] && !(typeof data['address_city'] === 'string' || data['address_city'] instanceof String)) {
      throw new Error("Expected the field `address_city` to be a primitive type in the JSON string but got " + data['address_city']);
    }
    // ensure the json data is a string
    if (data['address_country'] && !(typeof data['address_country'] === 'string' || data['address_country'] instanceof String)) {
      throw new Error("Expected the field `address_country` to be a primitive type in the JSON string but got " + data['address_country']);
    }
    // ensure the json data is a string
    if (data['address_line1'] && !(typeof data['address_line1'] === 'string' || data['address_line1'] instanceof String)) {
      throw new Error("Expected the field `address_line1` to be a primitive type in the JSON string but got " + data['address_line1']);
    }
    // ensure the json data is a string
    if (data['address_line2'] && !(typeof data['address_line2'] === 'string' || data['address_line2'] instanceof String)) {
      throw new Error("Expected the field `address_line2` to be a primitive type in the JSON string but got " + data['address_line2']);
    }
    // ensure the json data is a string
    if (data['address_postal_code'] && !(typeof data['address_postal_code'] === 'string' || data['address_postal_code'] instanceof String)) {
      throw new Error("Expected the field `address_postal_code` to be a primitive type in the JSON string but got " + data['address_postal_code']);
    }
    // ensure the json data is a string
    if (data['address_state'] && !(typeof data['address_state'] === 'string' || data['address_state'] instanceof String)) {
      throw new Error("Expected the field `address_state` to be a primitive type in the JSON string but got " + data['address_state']);
    }
    // ensure the json data is a string
    if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
      throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
    }
    // ensure the json data is a string
    if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
      throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
    }
    // ensure the json data is a string
    if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
      throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
    }
    // ensure the json data is a string
    if (data['environment_id'] && !(typeof data['environment_id'] === 'string' || data['environment_id'] instanceof String)) {
      throw new Error("Expected the field `environment_id` to be a primitive type in the JSON string but got " + data['environment_id']);
    }
    // ensure the json data is a string
    if (data['external_id'] && !(typeof data['external_id'] === 'string' || data['external_id'] instanceof String)) {
      throw new Error("Expected the field `external_id` to be a primitive type in the JSON string but got " + data['external_id']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // ensure the json data is a string
    if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
      throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
    }
    // ensure the json data is a string
    if (data['tenant_id'] && !(typeof data['tenant_id'] === 'string' || data['tenant_id'] instanceof String)) {
      throw new Error("Expected the field `tenant_id` to be a primitive type in the JSON string but got " + data['tenant_id']);
    }
    // ensure the json data is a string
    if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
      throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
    }
    // ensure the json data is a string
    if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
      throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
    }
    return true;
  }
}

/**
 * AddressCity is the city of the customer's address
 * @member {String} address_city
 */
DtoCustomerResponse.prototype['address_city'] = undefined;

/**
 * AddressCountry is the country of the customer's address (ISO 3166-1 alpha-2)
 * @member {String} address_country
 */
DtoCustomerResponse.prototype['address_country'] = undefined;

/**
 * AddressLine1 is the first line of the customer's address
 * @member {String} address_line1
 */
DtoCustomerResponse.prototype['address_line1'] = undefined;

/**
 * AddressLine2 is the second line of the customer's address
 * @member {String} address_line2
 */
DtoCustomerResponse.prototype['address_line2'] = undefined;

/**
 * AddressPostalCode is the postal code of the customer's address
 * @member {String} address_postal_code
 */
DtoCustomerResponse.prototype['address_postal_code'] = undefined;

/**
 * AddressState is the state of the customer's address
 * @member {String} address_state
 */
DtoCustomerResponse.prototype['address_state'] = undefined;

/**
 * @member {String} created_at
 */
DtoCustomerResponse.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
DtoCustomerResponse.prototype['created_by'] = undefined;

/**
 * Email is the email of the customer
 * @member {String} email
 */
DtoCustomerResponse.prototype['email'] = undefined;

/**
 * EnvironmentID is the environment identifier for the customer
 * @member {String} environment_id
 */
DtoCustomerResponse.prototype['environment_id'] = undefined;

/**
 * ExternalID is the external identifier for the customer
 * @member {String} external_id
 */
DtoCustomerResponse.prototype['external_id'] = undefined;

/**
 * ID is the unique identifier for the customer
 * @member {String} id
 */
DtoCustomerResponse.prototype['id'] = undefined;

/**
 * Metadata
 * @member {Object.<String, String>} metadata
 */
DtoCustomerResponse.prototype['metadata'] = undefined;

/**
 * Name is the name of the customer
 * @member {String} name
 */
DtoCustomerResponse.prototype['name'] = undefined;

/**
 * @member {module:model/TypesStatus} status
 */
DtoCustomerResponse.prototype['status'] = undefined;

/**
 * @member {String} tenant_id
 */
DtoCustomerResponse.prototype['tenant_id'] = undefined;

/**
 * @member {String} updated_at
 */
DtoCustomerResponse.prototype['updated_at'] = undefined;

/**
 * @member {String} updated_by
 */
DtoCustomerResponse.prototype['updated_by'] = undefined;
export default DtoCustomerResponse;